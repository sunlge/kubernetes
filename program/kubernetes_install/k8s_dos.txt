kubeadm token create --print-join-command  ##下面的命令会自动重新生成一个token，并且产生一条命令。生成以后直接复制即可。

kubectl drain node02.sunlge.com --ignore-daemonsets	##驱逐node节点
kubectl delete nodes node02.sunlge.com			##删除此节点
 
kubeadm config images list	##获取k8s所需版本镜像
kubeadm init       ##初始化集群
kubeadm token list ##查看当前token
kubeadm	join       ##初始化给的动态码
kubeadm reset		##重新进行初始化

kubectl get cs      ##显示集群组件当前状态
kubectl get nodes	##获取集群节点相关信息
kubectl apply -f    ##指定配置文件 声明式
kubectl get pods -n kube-system ##查看管理组pod状态
kubectl get pods -n kube-system -owide -w  ##监控管理详细信息
kubectl cluster-info  ##查看集群信息
kubectl version --short=true	##查看版本信息
kubectl describe nodes node01.sunlge.com	##描述节点信息
kubectl get pods --all-namespaces	//查看所有名称空间的pods
kubectl scale deployments/myapp --replicas=3	##指定副本数量，可以实现扩容和缩容。
source <(kubectl completion bash) //命令补全

kubectl get deployments myapp-test -o yaml --export >> s.yaml
kubectl label nodes node01.sunlge.com node-			 ##删除一个标签

kubectl run 	##会生成一个run的lables
kubectl create  ##会生成一个app的lables
kubectl expose  ##将资源暴露为新的Kubernetes Service。
namespace		##多租户用户资源隔离空间
kubectl delete deployments ngxin  	##删除部署集
kubectl explain pod.apiVersion		##查看pod的apiVersion支持的版本

kubectl run myapp --image=ikubernetes/myapp:v1 --replicas=1 --requests='cpu=50m,memory=128Mi' --limits='cpu=50m,memory=128Mi' --labels='app=myapp' --expose --port=80	##创建一个deployments以及一个service

kubectl autoscale deployment myapp --min=1 --max=8 --cpu-percent=60	##创建一个HPA

kubectl run nginx-deploy --image=nginx:1.12 --replicas=2   ##创建一个deployment控制器，保证系统始终有两个nginx pod
kubectl expose deployment/nginx --name=nginx-svc --port=80	
	##port为service暴露端口，NodePort为暴露外网当中，--target-port为目标容器端口
	##创建名为nginx-svc的Service资源对象，指定deployment为nginx-deploy，注意 --target-port=默认不指定为port端口。代表目标端口

kubectl get services	##查看service资源
kubectl get pods		##查看pods资源
kubectl create -f nginx-deloy.yaml -f nginx-svc.yaml 	##命令式根据资源清单创建文件，指定文件-f
kubectl apply -f 		##声明式对象配置
kubectl get namespaces 	##列出系统上所有的Namespace资源对象
kubectl get pod,services	##一次列出多个资源类别下的资源对象
kubectl get pods -l k8s-app -n kube-system	##列出kube-namespace中拥有k8s-app标签名词的所有pod对象
kubectl get pods -l run=nginx-deploy -o yaml -n default  ##查看default名词空间中拥有标签run=nginx-deploy的pod对象资源yaml文件
kubectl describe pods -l component=kube-apiserver -n kube-system  ##列出拥有component=kube-apiserver标签pod对象的详细信息
kubectl logs nginx-65f88748fd-cv54b -f	##-f 实时查看容器日志
	-p pod
	-c container
kubectl exec nginx-65f88748fd-cv54b -n default -- echo $PATH		##在指定容器内运行其他命令，若有多个容器，需要-c指定
kubectl delete services nginx-svs	##删除资源对象
kubectl delete pods -l run=nginx-deploy -n default  ##删除default名称空间中拥有标签run=nginx-deploy的所有pod对象
kubectl delete pods --all -n default	##删除default名称空间中的所有pod对象
